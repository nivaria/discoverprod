/**
 * @file
 * Positioning for responsive layout .
 *
 * Define CSS classes to create a table-free, 3-column, 2-column, or single
 * column layout depending on whether blocks are enabled in the left or right
 * columns.
 *
 * This layout uses the Zen Grids plugin for Compass: http://zengrids.com
 */


// We are going to create a 980px wide, 12 column grid with 20px gutters between
// columns (applied as 10px of left/right padding on each column).
$zen-column-count:  12;
$zen-gutter-width:  20px;

// If you need IE6/7 support for box-sizing: border-box (default), see _base.scss
//$zen-box-sizing: content-box;


// You can generate more efficient CSS if you manually apply the
// zen-grid-item-base mixin to all grid items from within a single ruleset.
$zen-auto-include-item-base: false;
// $zen-auto-include-flow-item-base: false;


// Suppress this section of CSS for RTL layouts since it contains no LTR-specific styles.
@if $zen-reverse-all-floats == false {

/*
 * Center the page.
 */

#page,
.region-bottom {
  /* For screen sizes larger than 1200px, prevent excessively long lines of text
     by setting a max-width. */
/*
  margin-left: auto;
  margin-right: auto;
  max-width: 1200px;
*/
}

.fixed-width-container {
  margin-left: auto;
  margin-right: auto;
  max-width: 940px;
}

#header {
}

#footer {
  padding: 30px 0;
}

/*
 * Apply relative position for the header
 */

#header .fixed-width-container {
  position: relative;
}

/*
 * Apply the shared properties of grid items in a single, efficient ruleset.
 */
// See the note about $zen-auto-include-item-base above.

#header,
#content,
#navigation,
.region-top-search,
.region-sidebar-first,
.region-sidebar-second,
#footer,


.flexslider-area,
.voting-and-map,
.column-content,
.column-price-author,
.column-node-body,
.column-type-cuisine,
.column-services,
.column-payment-methods,
.column-restaurants-right,
.column-wrong-info,
.node-bottom
 {
  @include zen-grid-item-base();
}


/*
 * Containers for grid items and flow items.
 */

#main {
  background-color: #fff;
  max-width: 980px;
  margin: 0 auto;
  padding: 20px 0;
}

#header,
#main,
#footer {
  @include zen-grid-container();
}

#header,
#footer {
  background-color: $headings-color;
}

/*
 * Navigation bar
 */

@media all and (min-width: 480px) {
  #navigation {
    height: $nav-height;
    text-align: center;
  }
}

} // End of @if $zen-reverse-all-floats == true

/*
 * Use 3 grid columns for smaller screens.
 */
$zen-column-count: 3;

@media all and (min-width: 480px) and (max-width: 979px) {

  /*
   * The layout when there is only one sidebar, the left one.
   */

  .sidebar-first {
    #content { /* Span 2 columns, starting in 2nd column from left. */
      @include zen-grid-item(2, 2);
    }

    .region-sidebar-first { /* Span 1 column, starting in 1st column from left. */
      @include zen-grid-item(1, 1);
    }
  }

  /*
   * The layout when there is only one sidebar, the right one.
   */

  .sidebar-second {
    #content { /* Span 2 columns, starting in 1st column from left. */
      @include zen-grid-item(2, 1);
    }

    .region-sidebar-second { /* Span 1 column, starting in 3rd column from left. */
      @include zen-grid-item(1, 3);
    }
  }

  /*
   * The layout when there are two sidebars.
   */

  .two-sidebars {
    #content { /* Span 2 columns, starting in 2nd column from left. */
      @include zen-grid-item(2, 2);
    }

    .region-sidebar-first { /* Span 1 column, starting in 1st column from left. */
      @include zen-grid-item(1, 1);
    }

    .region-sidebar-second { /* Start a new row and span all 3 columns. */
      @include zen-grid-item(3, 1);
      @include zen-nested-container(); // Since we're making every block in this region be a grid item.
      @include zen-clear();

      .block {
        @include zen-grid-item-base();
      }
      .block:nth-child(3n+1) { /* Span 1 column, starting in the 1st column from left. */
        @include zen-grid-item(1, 1);
        @include zen-clear();
      }
      .block:nth-child(3n+2) { /* Span 1 column, starting in the 2nd column from left. */
        @include zen-grid-item(1, 2);
      }
      .block:nth-child(3n) { /* Span 1 column, starting in the 3rd column from left. */
        @include zen-grid-item(1, 3);
      }
    }
  }
}

/*
 * Use 16 grid columns for larger screens.
 */
$zen-column-count: 16;

@media all and (min-width: 980px) {

  /*
   * Header Positioning
   */

  .header--logo {
    .not-front & {
      @include zen-grid-item(4, 1);
      padding: 16px 0;
    }
    .front & {
      text-align: center;
      padding: 16px 0 6px 0;
    }
  }

  .header--region {
    position: absolute;
    right: 0;
    width: 35%;
    top: 0;
  }

  .region-top-search {
    .not-front & {
      @include zen-grid-item(4, 5);
      margin-top: 16px;
    }
    .front & {
      position: absolute;
      left: 20px;
      top: 16px;
    }
  }

  #block-discover-generic-user-block {
    float: right;
    margin: 16px 0 0;
  }

  #navigation {
    .not-front & {
      @include zen-grid-item(8, 5);
      text-align: left;
      margin-top: 50px;
    }
    .front & {
      text-align: center;
    }
  }

  /*
   * The layout when there is only one sidebar, the left one.
   */

  .sidebar-first {
    #content { /* Span 4 columns, starting in 2nd column from left. */
      @include zen-grid-item(12, 5);
    }

    .region-sidebar-first { /* Span 1 column, starting in 1st column from left. */
      @include zen-grid-item(4, 1);
    }
  }

  /*
   * The layout when there is only one sidebar, the right one.
   */

  .sidebar-second {
    #content { /* Span 4 columns, starting in 1st column from left. */
      @include zen-grid-item(12, 1);
    }

    .region-sidebar-second { /* Span 1 column, starting in 5th column from left. */
      @include zen-grid-item(4, 13);
    }
  }

  /*
   * The layout when there are two sidebars.
   */

  .two-sidebars {
    #content { /* Span 3 columns, starting in 2nd column from left. */
      @include zen-grid-item(8, 5);
    }

    .region-sidebar-first { /* Span 1 column, starting in 1st column from left. */
      @include zen-grid-item(4, 1);
    }

    .region-sidebar-second { /* Span 1 column, starting in 5th column from left. */
      @include zen-grid-item(4, 13);
    }
  }

  /*
   * Node Type Restaurant Display
   */

/* =============================================================================
   Restaurant Display Nodes
   ========================================================================== */

  .node-restaurant-display {
    .flexslider-area {
      @include zen-grid-item(12, 1);
    }
    .voting-and-map {
      @include zen-grid-item(4, 13);
    }
    .column-content {
      @include zen-clear();
      @include zen-grid-item(12, 1);
      @include zen-nested-container();
    }

    // 12 Columns (16 - 4 for restaurant right)
    $zen-column-count: 12;
    .column-price-author {
      @include zen-grid-item(2, 1);
    }
    .column-node-body {
      @include zen-grid-item(10, 3);
    }

    .column-additional-info {
      @include zen-clear();
      @include zen-nested-container();
    }
    // 10 Columns (12 - 2 for column-price-author)
    $zen-column-count: 10;
    .column-type-cuisine {
      @include zen-grid-item(3, 1);
    }
    .column-services {
      @include zen-grid-item(4, 4);
    }
    .column-payment-methods {
      @include zen-grid-item(3, 8);
    }
    .column-wrong-info {
      @include zen-clear();
      @include zen-grid-item(10, 1);
    }

    $zen-column-count: 16;
    .column-restaurants-right {
      @include zen-grid-item(4, 13)
    }
    .node-bottom {
      @include zen-clear();
    }

  }

}
